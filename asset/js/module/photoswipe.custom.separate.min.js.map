{"version":3,"sources":["module/node_modules/browser-pack/_prelude.js","staticus-website-compiler-source/website/in/asset/js/module/photoswipe.custom.separate.js"],"names":["r","e","n","t","o","i","f","c","require","u","a","Error","code","p","exports","call","length","module","scrollAnimationFrame","pswpElement","gallerySelector","fullscreenOnOpen","scrollElement","isSwitchingGalleries","debugLogConfig","Event","enabled","color","Content","PointerGesture","EventDocumentWindow","Scroll","Caption","Fullscreen","URL","debugLog","tag","config","_console","_len","arguments","msgs","Array","_key","console","log","apply","concat","lightbox","PhotoSwipeLightbox","gallery","children","pswpModule","PhotoSwipe","isValidLightbox","pswp","openGalleryItemIndexes","galleryIndex","itemIndex","galleryElement","document","querySelectorAll","loadAndOpen","getWindowScrollPosition","x","window","scrollX","pageXOffset","y","scrollY","pageYOffset","getScrollElement","currentItem","currSlide","data","element","getCurrentItem","parentNode","tagName","toLowerCase","querySelector","getScrollElementPositionY","elementRect","getBoundingClientRect","viewportScrollPosition","viewportHeight","innerHeight","documentElement","clientHeight","targetScrollPosition","top","bottom","height","scrollToScrollElement","duration","startPosition","targetPosition","options","showAnimationDuration","distance","startTime","requestAnimationFrame","animation","currentTime","b","d","timeElapsed","run","scrollTo","jumpToScrollElement","cancelAnimationFrame","isFullscreen","fullscreenElement","mozFullScreenElement","webkitFullscreenElement","msFullscreenElement","updateFullscreenButton","button","innerHTML","exitFullscreen","mozCancelFullScreen","webkitExitFullscreen","msExitFullscreen","toggleFullscreen","elem","requestFullscreen","mozRequestFullScreen","webkitRequestFullscreen","msRequestFullscreen","enterFullscreen","fullscreenEnabled","mozFullScreenEnabled","webkitFullscreenEnabled","msFullscreenEnabled","on","ui","registerElement","name","order","isButton","html","title","className","onClick","appendTo","onInit","el","currSlideElement","captionHTML","parentElement","captionElement","getAttribute","style","display","addFilter","itemData","index","googleMapUrl","dataset","content","type","preventDefault","createElement","iframe","setAttribute","src","appendChild","galleryElements","contains","forEach","addEventListener","mouseOverUICount","Math","max","classList","add","remove","setTimeout","init","PSWP_Open","item"],"mappings":"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","file":"photoswipe.custom.separate.min.js","sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()","let pswpElement = null;\r\n\r\nconst gallerySelector = '.pswp-gallery';\r\nconst itemSelector = '.pswp-gallery__item';\r\n\r\nlet fullscreenOnOpen = false;\r\n\r\nlet scrollAnimationFrame;\r\nlet scrollElement = null;\r\n\r\nlet isSwitchingGalleries = false;\r\nlet newSwitchingGalleryIndex = 0;\r\nlet newSwitchingItemIndex = 0;\r\n\r\n// ============================================================================\r\n// Debug\r\n// ============================================================================\r\n\r\nconst debugLogConfig = {\r\n  Event:               { enabled: true, color: 'color: #9fbbe0' }, // blue (50% white)\r\n  Content:             { enabled: false, color: 'color: #ffbf80' }, // orange (50% white)\r\n  PointerGesture:      { enabled: false, color: 'color: #96d896' }, // green (50% white)\r\n  EventDocumentWindow: { enabled: false, color: 'color: #eb9393' }, // red (50% white)\r\n  Scroll:              { enabled: true, color: 'color: #c8a8e0' }, // purple (50% white)\r\n  Caption:             { enabled: false, color: 'color: #c5aaa2' }, // brown (50% white)\r\n  Fullscreen:          { enabled: false, color: 'color: #f1b9d6' }, // pink (50% white)\r\n  URL:                 { enabled: false, color: 'color: #d6d859' }, // yellow-green (50% white)\r\n};\r\n\r\nfunction debugLog(tag, ...msgs) {\r\n  const config = debugLogConfig[tag];\r\n  if (config && config.enabled) {\r\n    console.log(`%c[${tag}]`, config.color, ...msgs);\r\n  }\r\n}\r\n\r\n// ============================================================================\r\n// Construct\r\n// ============================================================================\r\n\r\nconst lightbox = new PhotoSwipeLightbox({\r\n  gallery: gallerySelector,\r\n  children: itemSelector,\r\n  pswpModule: PhotoSwipe\r\n});\r\n\r\nfunction isValidLightbox() {\r\n  return lightbox && lightbox.pswp;\r\n}\r\n\r\n// ============================================================================\r\n// Open\r\n// ============================================================================\r\n\r\nfunction clamp(value, min, max) {\r\n  return Math.max(min, Math.min(max, value));\r\n}\r\n\r\nfunction openGalleryItemIndexes(galleryIndex, itemIndex) {\r\n  debugLog('URL', 'openGalleryItemIndexes, galleryIndex:', galleryIndex, ', itemIndex:', itemIndex);\r\n\r\n  const galleryElements = document.querySelectorAll(gallerySelector);\r\n\r\n  const galleryElement = galleryElements[galleryIndex];\r\n\r\n  lightbox.loadAndOpen(itemIndex, { gallery: galleryElement });\r\n}\r\n\r\n// ============================================================================\r\n// Scroll to Element\r\n// ============================================================================\r\n\r\nfunction getViewportHeight() {\r\n  debugLog('Scroll', 'getViewportHeight');\r\n\r\n  return window.innerHeight || document.documentElement.clientHeight;\r\n}\r\n\r\nfunction getViewportWidth() {\r\n  debugLog('Scroll', 'getViewportWidth');\r\n\r\n  return window.innerWidth || document.documentElement.clientWidth;\r\n}\r\n\r\nfunction getWindowScrollPosition() {\r\n  debugLog('Scroll', 'getWindowScrollPosition');\r\n\r\n  return {\r\n    x: window.scrollX || window.pageXOffset,\r\n    y: window.scrollY || window.pageYOffset\r\n  };\r\n}\r\n\r\nfunction getCurrentItem() {\r\n  debugLog('Scroll', 'getCurrentItem');\r\n\r\n  if (!isValidLightbox()) {\r\n    return null;\r\n  }\r\n\r\n  const currSlide = lightbox.pswp.currSlide;\r\n  \r\n  if (!currSlide || !currSlide.data) return null;\r\n  \r\n  // Scroll the element into view if it is off-screen\r\n  return currSlide.data.element;\r\n}\r\n\r\nfunction getScrollElement() {\r\n  debugLog('Scroll', 'getScrollElement');\r\n\r\n  let currentItem = getCurrentItem();\r\n\r\n  if (!currentItem) {\r\n    return null;\r\n  }\r\n  \r\n  // Check if the element's parent is a figure with a figcaption child\r\n  if (currentItem.parentNode.tagName.toLowerCase() === 'figure' && currentItem.parentNode.querySelector('figcaption')) {\r\n    currentItem = currentItem.parentNode;\r\n  }\r\n\r\n  return currentItem;\r\n}\r\n\r\nfunction getScrollElementPositionY() {\r\n  debugLog('Scroll', 'getScrollElementPositionY');\r\n\r\n  const elementRect = scrollElement.getBoundingClientRect();\r\n  const viewportScrollPosition = getWindowScrollPosition().y;\r\n  const viewportHeight = getViewportHeight();\r\n\r\n  // Calculate the target scroll position to center the element vertically\r\n  let targetScrollPosition = viewportScrollPosition;\r\n\r\n  if (elementRect.top < 0 || elementRect.bottom > viewportHeight) {\r\n    // Center the element vertically in the viewport\r\n    targetScrollPosition = viewportScrollPosition + elementRect.top - (viewportHeight / 2 - elementRect.height / 2);\r\n  }\r\n\r\n  debugLog('Scroll', 'getScrollElementPositionY, targetScrollPosition:', targetScrollPosition);\r\n\r\n  return targetScrollPosition;\r\n}\r\n\r\nfunction scrollToScrollElement(duration) {\r\n  debugLog('Scroll', 'scrollToScrollElement, duration: ', duration);\r\n\r\n  const startPosition = getWindowScrollPosition().y;\r\n  const targetPosition = getScrollElementPositionY();\r\n  \r\n  debugLog('Scroll', 'scrollToScrollElement, startPosition: ', startPosition);\r\n  debugLog('Scroll', 'scrollToScrollElement, targetPosition: ', targetPosition);\r\n\r\n  if (startPosition == targetPosition) {\r\n    return;\r\n  }\r\n\r\n  if (duration === 0) {\r\n    window.scrollTo(0, targetPosition); // Scroll immediately\r\n    return;\r\n  }\r\n\r\n  if (typeof duration !== 'number' || duration < 0) {\r\n    duration = lightbox.pswp.options.showAnimationDuration;\r\n  }\r\n\r\n  const distance = targetPosition - startPosition;\r\n  let startTime = null;\r\n\r\n  function animation(currentTime) {\r\n    if (startTime === null) startTime = currentTime;\r\n    \r\n    const timeElapsed = currentTime - startTime;\r\n    const run = easeInOutQuad(timeElapsed, startPosition, distance, duration);\r\n\r\n    window.scrollTo(0, run);\r\n\r\n    if (timeElapsed < duration) {\r\n      scrollAnimationFrame = requestAnimationFrame(animation);\r\n    }\r\n  }\r\n\r\n  function easeInOutQuad(t, b, c, d) {\r\n    if (d === 0) return b + c; // Immediately go to the target position if duration is 0\r\n    t /= d / 2;\r\n    if (t < 1) return c / 2 * t * t + b;\r\n    t--;\r\n    return -c / 2 * (t * (t - 2) - 1) + b;\r\n  }\r\n\r\n  scrollAnimationFrame = requestAnimationFrame(animation);\r\n}\r\n\r\nfunction jumpToScrollElement() {\r\n  debugLog('Scroll', 'jumpToScrollElement');\r\n  \r\n  if (scrollAnimationFrame) {\r\n    cancelAnimationFrame(scrollAnimationFrame);\r\n    scrollToScrollElement(0);\r\n  }\r\n}\r\n\r\n// Use this function to scroll the element into view if it is off-screen\r\nfunction processScrollElement() {\r\n  scrollElement = getScrollElement();\r\n\r\n  debugLog('Scroll', 'processScrollElement, scrollElement: ', scrollElement);\r\n\r\n  scrollToScrollElement();\r\n}\r\n\r\n// ============================================================================\r\n// Fullscreen\r\n// ============================================================================\r\n\r\n// Function to check if we are in fullscreen mode\r\nfunction isFullscreen() {\r\n  debugLog('Fullscreen', 'debugLog_Fullscreen');\r\n\r\n  return !!(\r\n    // alternative standard method:\r\n    document.fullscreenElement ||\r\n    // current working methods:\r\n    document.mozFullScreenElement ||\r\n    document.webkitFullscreenElement ||\r\n    document.msFullscreenElement\r\n  );\r\n}\r\n\r\n// Function to check if fullscreen is supported\r\nfunction isFullscreenSupported() {\r\n  debugLog('Fullscreen', 'isFullscreenSupported');\r\n\r\n  return !!(\r\n    document.fullscreenEnabled ||\r\n    document.mozFullScreenEnabled ||\r\n    document.webkitFullscreenEnabled ||\r\n    document.msFullscreenEnabled\r\n  );\r\n}\r\n\r\n// Function to update fullscreen button content\r\nfunction updateFullscreenButton(isFullscreen) {\r\n  debugLog('Fullscreen', 'updateFullscreenButton, isFullscreen:', isFullscreen);\r\n\r\n  const button = document.querySelector('.pswp__button--fs');\r\n  if (button) {\r\n    if (isFullscreen) {\r\n      button.innerHTML = '<span class=\"icon-module_photoswipe-fullscreen-disable\"></span>';\r\n    } else {\r\n      button.innerHTML = '<span class=\"icon-module_photoswipe-fullscreen-enable\"></span>';\r\n    }\r\n  }\r\n}\r\n\r\n// Function to request fullscreen mode\r\nfunction enterFullscreen() {\r\n  debugLog('Fullscreen', 'enterFullscreen');\r\n\r\n  const elem = document.documentElement; // You can also target a specific element if needed\r\n  if (elem.requestFullscreen) {\r\n    elem.requestFullscreen();\r\n  } else if (elem.mozRequestFullScreen) { // Firefox\r\n    elem.mozRequestFullScreen();\r\n  } else if (elem.webkitRequestFullscreen) { // Chrome, Safari and Opera\r\n    elem.webkitRequestFullscreen();\r\n  } else if (elem.msRequestFullscreen) { // IE/Edge\r\n    elem.msRequestFullscreen();\r\n  }\r\n  updateFullscreenButton(true);\r\n}\r\n\r\n// Function to exit fullscreen mode\r\nfunction exitFullscreen() {\r\n  debugLog('Fullscreen', 'exitFullscreen');\r\n\r\n  if (document.exitFullscreen) {\r\n    document.exitFullscreen();\r\n  } else if (document.mozCancelFullScreen) { // Firefox\r\n    document.mozCancelFullScreen();\r\n  } else if (document.webkitExitFullscreen) { // Chrome, Safari and Opera\r\n    document.webkitExitFullscreen();\r\n  } else if (document.msExitFullscreen) { // IE/Edge\r\n    document.msExitFullscreen();\r\n  }\r\n  updateFullscreenButton(false);\r\n}\r\n\r\n// Function to toggle fullscreen mode\r\nfunction toggleFullscreen() {\r\n  debugLog('Fullscreen', 'toggleFullscreen');\r\n\r\n  if (!isFullscreen()) {\r\n    enterFullscreen();\r\n  } else {\r\n    exitFullscreen();\r\n  }\r\n}\r\n\r\nif (isFullscreenSupported()) {\r\n  lightbox.on('uiRegister', function() {\r\n    debugLog('Fullscreen', 'uiRegister pswp__button--fs');\r\n  \r\n    lightbox.pswp.ui.registerElement({\r\n      name: 'fullscreen-button',\r\n      order: 8,\r\n      isButton: true,\r\n      tagName: 'button',\r\n      html: '<span class=\"icon-module_photoswipe-fullscreen-enable\"></span>',\r\n      title: 'Fullscreen',\r\n      className: 'pswp__button--fs',\r\n      onClick: toggleFullscreen\r\n    });\r\n  });\r\n}\r\n\r\n// ============================================================================\r\n// Zoom Indicator\r\n// ============================================================================\r\n\r\n// lightbox.on('uiRegister', function() {\r\n//   lightbox.pswp.ui.registerElement({\r\n//     name: 'zoom-level-indicator',\r\n//     order: 9,\r\n//     onInit: (el, pswp) => {\r\n//       pswp.on('zoomPanUpdate', (e) => {\r\n//         if (e.slide === pswp.currSlide) {\r\n//           el.innerHTML = '<span class=\"label\">Zoom</span><span class=\"value\">' + Math.ceil(pswp.currSlide.currZoomLevel * 100) + '%</span>';\r\n//         }\r\n//       });\r\n//     }\r\n//   });\r\n// });\r\n\r\n// ============================================================================\r\n// Caption\r\n// ============================================================================\r\n\r\nlightbox.on('uiRegister', function() {\r\n  debugLog('Caption', 'uiRegister custom-caption');\r\n\r\n  lightbox.pswp.ui.registerElement({\r\n    name: 'custom-caption',\r\n    order: 9,\r\n    isButton: false,\r\n    appendTo: 'root',\r\n    html: 'Caption text',\r\n    onInit: (el, pswp) => {\r\n      lightbox.pswp.on('change', () => {\r\n        debugLog('Caption', 'custom-caption change');\r\n      \r\n        const currSlideElement = lightbox.pswp.currSlide.data.element;\r\n        let captionHTML = '';\r\n        if (currSlideElement) {\r\n          const parentElement = currSlideElement.parentElement;\r\n          let captionElement = null;\r\n\r\n          if (parentElement && parentElement.tagName.toLowerCase() === 'figure') {\r\n            captionElement = parentElement.querySelector('figcaption');\r\n          }\r\n\r\n          if (captionElement) {\r\n            // get caption from figcaption element\r\n            captionHTML = captionElement.innerHTML;\r\n          } else {\r\n            // get caption from alt attribute\r\n            captionHTML = currSlideElement.querySelector('img').getAttribute('alt');\r\n          }\r\n        }\r\n        if (captionHTML) {\r\n          el.innerHTML = captionHTML;\r\n          el.style.display = 'block';\r\n        } else {\r\n          el.innerHTML = '';\r\n          el.style.display = 'none';\r\n        }\r\n      });\r\n    }\r\n  });\r\n});\r\n\r\n// ============================================================================\r\n// Google Map\r\n// ============================================================================\r\n\r\n// parse data-google-map-url attribute\r\nlightbox.addFilter('itemData', (itemData, index) => {\r\n  \r\n  const el = itemData.element;\r\n\r\n  if (!el) {\r\n    return;\r\n  }\r\n\r\n  const googleMapUrl = el.dataset.googleMapUrl;\r\n  if (googleMapUrl) {\r\n    itemData.googleMapUrl = googleMapUrl;\r\n  }\r\n  return itemData;\r\n});\r\n\r\n// ============================================================================\r\n// Event - Content\r\n// ============================================================================\r\n\r\nlightbox.on('contentLoad', (e) => {\r\n  debugLog('Content', 'contentLoad', e);\r\n\r\n  const { content } = e;\r\n  if (content.type === 'google-map') {\r\n    // prevent the default behavior\r\n    e.preventDefault();\r\n\r\n    // Create a container for iframe\r\n    // and assign it to the `content.element` property\r\n    content.element = document.createElement('div');\r\n    content.element.className = 'pswp__google-map-container';\r\n\r\n    const iframe = document.createElement('iframe');\r\n    iframe.setAttribute('allowfullscreen', '');\r\n    iframe.src = content.data.googleMapUrl;\r\n    content.element.appendChild(iframe);\r\n  }\r\n});\r\n\r\n// ============================================================================\r\n// Event - Open\r\n// ============================================================================\r\n\r\nfunction getAnimationDuration() {\r\n  return 333;\r\n}\r\n\r\n// photoswipe starts to open\r\nlightbox.on('beforeOpen', () => {\r\n  debugLog('Event', 'beforeOpen');\r\n\r\n  lightbox.pswp.options.showAnimationDuration = getAnimationDuration();\r\n});\r\n\r\n// photoswipe keeps opening\r\n// you may modify initial index or basic DOM structure\r\nlightbox.on('firstUpdate', function() {\r\n  debugLog('Event', 'firstUpdate');\r\n\r\n  fullscreenOnOpen = isFullscreen();\r\n  updateFullscreenButton(fullscreenOnOpen);\r\n});\r\n\r\n// photoswipe measures size of various elements\r\n// if you need to read getBoundingClientRect of something - do it here\r\n// lightbox.on('initialLayout', () => {\r\n//   debugLog('Event', 'initialLayout');\r\n// });\r\n\r\n// triggers when slide is switched, and at initialization\r\nlightbox.on('change', () => {\r\n  debugLog('Event', 'change');\r\n  \r\n  // Update URL when slide changes\r\n  const currSlide = lightbox.pswp.currSlide;\r\n  \r\n  if (!currSlide || !currSlide.data) return;\r\n  \r\n  const galleryElements = document.querySelectorAll(gallerySelector);\r\n  let gallery = 0;\r\n  for (let i = 0; i < galleryElements.length; i++) {\r\n    if (galleryElements[i].contains(currSlide.data.element)) {\r\n      gallery = i + 1;\r\n      break;\r\n    }\r\n  }\r\n  const item = currSlide.index + 1;\r\n\r\n  processScrollElement();\r\n});\r\n\r\nlightbox.on('bindEvents', () => {\r\n  debugLog('Event', 'bindEvents');\r\n  // photoswipe binds DOM events (such as pointer events, wheel, etc)\r\n\r\n  // Event listeners for .pswp__button elements to track mouseover state\r\n  document.querySelectorAll('.pswp__button, .pswp__counter, .pswp__zoom-level-indicator, .pswp__custom-caption, .pswp__menu').forEach(element => {\r\n    element.addEventListener('mouseenter', () => {\r\n      mouseOverUICount += 1;\r\n      // console.log(`Mouse entered: ${element.className}, button count: ${mouseOverUICount}`);\r\n    });\r\n    element.addEventListener('mouseleave', () => {\r\n      mouseOverUICount = Math.max(mouseOverUICount - 1, 0);\r\n      // console.log(`Mouse left: ${element.className}, button count: ${mouseOverUICount}`);\r\n    });\r\n  });\r\n});\r\n\r\nlightbox.on('openingAnimationStart', () => {\r\n  debugLog('Event', 'closingAnimationStart');\r\n\r\n  isSwitchingGalleries = false;\r\n\r\n  pswpElement = document.querySelector('.pswp');\r\n  if (pswpElement) {\r\n    pswpElement.classList.add('pswp--animation-open');\r\n  }\r\n});\r\n\r\nlightbox.on('openingAnimationEnd', () => {\r\n  debugLog('Event', 'closingAnimationEnd');\r\n\r\n  if (pswpElement) {\r\n    pswpElement.classList.remove('pswp--animation-open');\r\n  }\r\n});\r\n\r\n// ============================================================================\r\n// Event - Close\r\n// ============================================================================\r\n\r\n// PhotoSwipe starts to close, unbind most events here\r\nlightbox.on('close', () => {\r\n  debugLog('Event', 'close');\r\n  \r\n  jumpToScrollElement();\r\n});\r\n\r\nlightbox.on('closingAnimationStart', () => {\r\n  debugLog('Event', 'closingAnimationStart');\r\n\r\n  jumpToScrollElement();\r\n\r\n  if (!fullscreenOnOpen && isFullscreen()) {\r\n    exitFullscreen();\r\n  }\r\n\r\n  if (pswpElement) {\r\n    pswpElement.classList.add('pswp--animation-close');\r\n  }\r\n});\r\n\r\n// PhotoSwipe is fully closed, destroy everything\r\nlightbox.on('destroy', () => {\r\n  debugLog('Event', 'destroy');\r\n\r\n  jumpToScrollElement();\r\n\r\n  if (isSwitchingGalleries) {\r\n    setTimeout(() => {\r\n      openGalleryItemIndexes(newSwitchingGalleryIndex, newSwitchingItemIndex);\r\n    }, 1);\r\n  }\r\n});\r\n\r\n// ============================================================================\r\n// Init\r\n// ============================================================================\r\n\r\nlightbox.init();\r\n\r\n// ============================================================================\r\n// Control\r\n// ============================================================================\r\n\r\nfunction PSWP_Open(gallery, item) {\r\n  debugLog('URL', 'PSWP_Open, gallery:', gallery, ', item:', item);\r\n\r\n  // Open the gallery based on the new hash\r\n  openGalleryItemIndexes(gallery, item);\r\n}\r\n\r\n// ============================================================================\r\n// Document & Window\r\n// ============================================================================\r\n\r\n// Function to reposition the menu on window resize\r\nfunction onWindowResize() {\r\n  debugLog('EventDocumentWindow', 'onWindowResize');\r\n\r\n  if (!isValidLightbox()) {\r\n    return;\r\n  }\r\n}\r\n\r\n// Bind the resize event to the window\r\nwindow.addEventListener('resize', onWindowResize);\r\n\r\nwindow.PSWP_Open = PSWP_Open;\r\n"]}