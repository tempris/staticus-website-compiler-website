{"version":3,"sources":["module/prism-live/node_modules/browser-pack/_prelude.js","module/prism-live/src/js/module/prism-live/prism-live.js"],"names":["r","e","n","t","o","i","f","c","require","u","a","Error","code","p","exports","call","length","module","_regeneratorRuntime","Object","prototype","hasOwnProperty","defineProperty","value","Symbol","iterator","asyncIterator","toStringTag","define","enumerable","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","type","arg","h","l","s","y","GeneratorFunction","GeneratorFunctionPrototype","this","d","getPrototypeOf","v","values","g","defineIteratorMethods","forEach","_invoke","AsyncIterator","invoke","_typeof","resolve","__await","then","callInvokeWithMethodAndArg","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","isNaN","displayName","isGeneratorFunction","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","reverse","pop","prev","charAt","slice","stop","rval","handle","complete","finish","catch","delegateYield","_taggedTemplateLiteral","freeze","defineProperties","raw","_classCallCheck","_defineProperties","_toPropertyKey","key","toPrimitive","String","Number","_toPrimitive","_toConsumableArray","Array","isArray","_arrayLikeToArray","_arrayWithoutHoles","from","_iterableToArray","toString","test","_unsupportedIterableToArray","_nonIterableSpread","asyncGeneratorStep","_callee","bliss","$","$$","ready","base","load","files","superKey","_","_context","window","Bliss","console","log","document","createElement","src","head","appendChild","onload","currentScript","URL","searchParams","get","apply","split","map","concat","all","url","navigator","platform","indexOf","Prism","Live","PrismLive","source","_this","sourceType","nodeName","toLowerCase","wrapper","className","around","textarea","pre","contents","before","classList","add","textContent","after","set","self","Incrementable","bind","input","evt","update","keyup","insert","currentIndent","syncScroll","keydown","altKey","pairs","other","wrapSelection","outside","preventDefault","shortcut","shortcuts","checkShortcut","tabstops","moveCaret","shift","hasSelection","beforeCaret","outdent","shiftKey","selectionStart","selection","adjustIndentation","relative","indentation","replace","isBeforeIndented","regexp","gm","_templateObject","indent","hasLineAbove","selector","match","expandSnippet","requestAnimationFrame","fire","click","getLine","lastIndexOf","addEventListener","passive","resize","syncStyles","sourceCS","getComputedStyle","style","height","getPropertyValue","maxHeight","spellcheck","lang","observer","MutationObserver","activeElement","observe","dispatchEvent","CustomEvent","bubbles","detail","childList","subtree","characterData","takeRecords","disconnect","text","context","snippets","expansion","custom","stops","replacement","str","CARET_INDICATOR","exec","index","lastIndex","join","matchIndentation","selectionEnd","DEFAULT_INDENT","node","getNode","parentNode","closest","aliases","currentLanguage","languages","DEFAULT","force","unobserve","highlightElement","cs","caretColor","color","properties","prop","clientWidth","clientHeight","scrollTop","scrollLeft","until","arguments","undefined","beforeCaretIndex","_char","start","end","afterCaretIndex","pos","chars","setCaret","focus","hadSelection","insertText","_ref3","ss","se","_this2","supportsExecCommand","execCommand","setRangeText","_ref4","_ref4$start","_ref4$end","between","comments","commentNode","getOffset","commentText","singleline","multiline","afterCaret","characters","_ref5","forward","offset","container","sum","walk","createTreeWalker","NodeFilter","SHOW_TEXT","nextNode","data","range","createRange","selectNodeContents","setEnd","regex","def","trim","every","ctrlKey","parent","_ref6","_ref6$relative","_ref6$indent","minIndent","_templateObject2","sort","_templateObject3","_templateObject4","assign","WeakMap","toggleComment","duplicateContent","ret","canonical","entries","x","id","grammar","_regexp","flags","strings","_len","_key","pattern","RegExp","cache","Proxy","property","_next","_throw"],"mappings":"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","file":"prism-live.min.js","sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()","/**\n\tPrism Live: Code editor based on Prism.js\n\tWorks best in Chrome. Currently only very basic support in other browsers (no snippets, no shortcuts)\n\t@author Lea Verou\n*/\n(async function() {\n\nif (!window.Bliss) {\n\t// Load Bliss if not loaded\n\tconsole.log(\"Bliss not loaded. Loading remotely from blissfuljs.com\");\n\n\tlet bliss = document.createElement(\"script\");\n\tbliss.src = \"https://blissfuljs.com/bliss.shy.min.js\";\n\tdocument.head.appendChild(bliss);\n\n\tawait new Promise(resolve => bliss.onload = resolve);\n}\n\nvar $ = Bliss, $$ = Bliss.$;\nvar ready = Promise.resolve();\n\nif (document.currentScript) {\n\t// Tiny dynamic loader. Use e.g. ?load=css,markup,javascript to load components\n\tvar base = document.currentScript.src;\n\tvar load = new URL(base).searchParams.get(\"load\");\n\n\tif (load !== null) {\n\t\tvar files = [\"../prism-live.css\"];\n\n\t\tif (load) {\n\t\t\tfiles.push(...load.split(/,/).map(c => /\\./.test(c)? c : `prism-live-${c}.js`));\n\t\t}\n\n\t\tready = Promise.all(files.map(url => $.load(url, base)));\n\t}\n}\n\nvar superKey = navigator.platform.indexOf(\"Mac\") === 0? \"metaKey\" : \"ctrlKey\";\n\nvar _ = Prism.Live = class PrismLive {\n\tconstructor(source) {\n\t\tthis.source = source;\n\t\tthis.sourceType = source.nodeName.toLowerCase();\n\n\t\tthis.wrapper = $.create({\n\t\t\tclassName: \"prism-live\",\n\t\t\taround: this.source\n\t\t});\n\n\t\tif (this.sourceType === \"textarea\") {\n\t\t\tthis.textarea = this.source;\n\t\t\tthis.code = $.create(\"code\");\n\n\t\t\tthis.pre = $.create(\"pre\", {\n\t\t\t\tclassName: this.textarea.className + \" no-whitespace-normalization\",\n\t\t\t\tcontents: this.code,\n\t\t\t\tbefore: this.textarea\n\t\t\t});\n\t\t}\n\t\telse {\n\t\t\tthis.pre = this.source;\n\t\t\t// Normalize once, to fix indentation from markup and then remove normalization\n\t\t\t// so we can enter blank lines etc\n\n\t\t\t// Prism.plugins.NormalizeWhitespace.normalize($(\"code\", this.pre), {});\n\t\t\tthis.pre.classList.add(\"no-whitespace-normalization\");\n\t\t\tthis.code = $(\"code\", this.pre);\n\n\t\t\tthis.textarea = $.create(\"textarea\", {\n\t\t\t\tclassName: this.pre.className,\n\t\t\t\tvalue: this.pre.textContent,\n\t\t\t\tafter: this.pre\n\t\t\t});\n\t\t}\n\n\t\t_.all.set(this.textarea, this);\n\t\t_.all.set(this.pre, this);\n\t\t_.all.set(this.code, this);\n\n\t\tthis.pre.classList.add(\"prism-live\");\n\t\tthis.textarea.classList.add(\"prism-live\");\n\t\tthis.source.classList.add(\"prism-live-source\");\n\n\t\tif (self.Incrementable) {\n\t\t\t// TODO data-* attribute for modifier\n\t\t\t// TODO load dynamically if not present\n\t\t\tnew Incrementable(this.textarea);\n\t\t}\n\n\t\t$.bind(this.textarea, {\n\t\t\tinput: evt => this.update(),\n\n\t\t\tkeyup: evt => {\n\t\t\t\tif (evt.key == \"Enter\") { // Enter\n\t\t\t\t\t// Maintain indent on line breaks\n\t\t\t\t\tthis.insert(this.currentIndent);\n\t\t\t\t\tthis.syncScroll();\n\t\t\t\t}\n\t\t\t},\n\n\t\t\tkeydown: evt => {\n\t\t\t\tif (evt.key == \"Tab\" && !evt.altKey) {\n\t\t\t\t\t// Default is to move focus off the textarea\n\t\t\t\t\t// this is never desirable in an editor\n\t\t\t\t\tevt.preventDefault();\n\n\t\t\t\t\tif (this.tabstops && this.tabstops.length > 0) {\n\t\t\t\t\t\t// We have tabstops to go\n\t\t\t\t\t\tthis.moveCaret(this.tabstops.shift());\n\t\t\t\t\t}\n\t\t\t\t\telse if (this.hasSelection) {\n\t\t\t\t\t\tvar before = this.beforeCaret(\"\\n\");\n\t\t\t\t\t\tvar outdent = evt.shiftKey;\n\n\t\t\t\t\t\tthis.selectionStart -= before.length;\n\n\t\t\t\t\t\tvar selection = _.adjustIndentation(this.selection, {\n\t\t\t\t\t\t\trelative: true,\n\t\t\t\t\t\t\tindentation: outdent? -1 : 1\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\tthis.replace(selection);\n\n\t\t\t\t\t\tif (outdent) {\n\t\t\t\t\t\t\tvar indentStart = _.regexp.gm`^${this.indent}`;\n\t\t\t\t\t\t\tvar isBeforeIndented = indentStart.test(before);\n\t\t\t\t\t\t\tthis.selectionStart += before.length + 1 - (outdent + isBeforeIndented);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse { // Indent\n\t\t\t\t\t\t\tvar hasLineAbove = before.length == this.selectionStart;\n\t\t\t\t\t\t\tthis.selectionStart += before.length + 1 + !hasLineAbove;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\t// Nothing selected, expand snippet\n\t\t\t\t\t\tvar selector = _.match(this.beforeCaret(), /\\S*$/);\n\t\t\t\t\t\tvar snippetExpanded = this.expandSnippet(selector);\n\n\t\t\t\t\t\tif (snippetExpanded) {\n\t\t\t\t\t\t\trequestAnimationFrame(() => $.fire(this.textarea, \"input\"));\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tthis.insert(this.indent);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if (_.pairs[evt.key]) {\n\t\t\t\t\tvar other = _.pairs[evt.key];\n\t\t\t\t\tthis.wrapSelection({\n\t\t\t\t\t\tbefore: evt.key,\n\t\t\t\t\t\tafter: other,\n\t\t\t\t\t\toutside: true\n\t\t\t\t\t});\n\t\t\t\t\tevt.preventDefault();\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tfor (let shortcut in _.shortcuts) {\n\t\t\t\t\t\tif (_.checkShortcut(shortcut, evt)) {\n\t\t\t\t\t\t\t_.shortcuts[shortcut].call(this, evt);\n\t\t\t\t\t\t\tevt.preventDefault();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\n\t\t\tclick: evt => {\n\t\t\t\tvar l = this.getLine();\n\t\t\t\tvar v = this.value;\n\t\t\t\tvar ss = this.selectionStart;\n\t\t\t\t//console.log(ss, v[ss], l, v.slice(l.start, l.end));\n\t\t\t},\n\n\t\t\t\"click keyup\": evt => {\n\t\t\t\tif (!evt.key || evt.key.lastIndexOf(\"Arrow\") > -1) {\n\t\t\t\t\t// Caret moved\n\t\t\t\t\tthis.tabstops = null;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\t// this.syncScroll();\n\t\tthis.textarea.addEventListener(\"scroll\", this, {passive: true});\n\n\t\t$.bind(window, {\n\t\t\t\"resize\": evt => this.syncStyles()\n\t\t});\n\n\t\t// Copy styles with a delay\n\t\trequestAnimationFrame(() => {\n\t\t\tthis.syncStyles();\n\n\t\t\tvar sourceCS = getComputedStyle(this.source);\n\n\t\t\tthis.pre.style.height = this.source.style.height || sourceCS.getPropertyValue(\"--height\");\n\t\t\tthis.pre.style.maxHeight = this.source.style.maxHeight || sourceCS.getPropertyValue(\"--max-height\");\n\t\t\tthis.textarea.spellcheck = this.source.spellcheck || sourceCS.getPropertyValue(\"--spellcheck\");\n\t\t});\n\n\t\tthis.update();\n\t\tthis.lang = (this.code.className.match(/lang(?:uage)?-(\\w+)/i) || [,])[1];\n\n\t\tthis.observer = new MutationObserver(r => {\n\t\t\tif (document.activeElement !== this.textarea) {\n\t\t\t\tthis.textarea.value = this.pre.textContent;\n\t\t\t}\n\t\t});\n\n\t\tthis.observe();\n\n\t\tthis.source.dispatchEvent(new CustomEvent(\"prism-live-init\", {bubbles: true, detail: this}));\n  }\n\n\thandleEvent(evt) {\n\t\tif (evt.type === \"scroll\") {\n\t\t\tthis.syncScroll();\n\t\t}\n\t}\n\n\tobserve () {\n\t\treturn this.observer && this.observer.observe(this.pre, {\n\t\t\tchildList: true,\n\t\t\tsubtree: true,\n\t\t\tcharacterData: true\n\t\t});\n\t}\n\n\tunobserve () {\n\t\tif (this.observer) {\n\t\t\tthis.observer.takeRecords();\n\t\t\tthis.observer.disconnect();\n\t\t}\n\t}\n\n\texpandSnippet(text) {\n\t\tif (!text) {\n\t\t\treturn false;\n\t\t}\n\n\t\tvar context = this.context;\n\n\t\tif (text in context.snippets || text in _.snippets) {\n\t\t\t// Static Snippets\n\t\t\tvar expansion = context.snippets[text] || _.snippets[text];\n\t\t}\n\t\telse if (context.snippets.custom) {\n\t\t\tvar expansion = context.snippets.custom.call(this, text);\n\t\t}\n\n\t\tif (expansion) {\n\t\t\t// Insert snippet\n\t\t\tvar stops = [];\n\t\t\tvar replacement = [];\n\t\t\tvar str = expansion;\n\t\t\tvar match;\n\n\t\t\twhile (match = _.CARET_INDICATOR.exec(str)) {\n\t\t\t\tstops.push(match.index + 1);\n\t\t\t\treplacement.push(str.slice(0, match.index + match[1].length));\n\t\t\t\tstr = str.slice(match.index + match[0].length);\n\t\t\t\t_.CARET_INDICATOR.lastIndex = 0;\n\t\t\t}\n\n\t\t\treplacement.push(str);\n\t\t\treplacement = replacement.join(\"\");\n\n\t\t\tif (stops.length > 0) {\n\t\t\t\t// make first stop relative to end, all others relative to previous stop\n\t\t\t\tstops[0] -= replacement.length;\n\t\t\t}\n\n\t\t\tthis.delete(text);\n\t\t\tthis.insert(replacement, {matchIndentation: true});\n\t\t\tthis.tabstops = stops;\n\t\t\tthis.moveCaret(this.tabstops.shift());\n\t\t}\n\n\t\treturn !!expansion;\n\t}\n\n\tget selectionStart() {\n\t\treturn this.textarea.selectionStart;\n\t}\n\tset selectionStart(v) {\n\t\tthis.textarea.selectionStart = v;\n\t}\n\n\tget selectionEnd() {\n\t\treturn this.textarea.selectionEnd;\n\t}\n\tset selectionEnd(v) {\n\t\tthis.textarea.selectionEnd = v;\n\t}\n\n\tget hasSelection() {\n\t\treturn this.selectionStart != this.selectionEnd;\n\t}\n\n\tget selection() {\n\t\treturn this.value.slice(this.selectionStart, this.selectionEnd);\n\t}\n\n\tget value() {\n\t\treturn this.textarea.value;\n\t}\n\tset value(v) {\n\t\tthis.textarea.value = v;\n\t}\n\n\tget indent() {\n\t\treturn _.match(this.value, /^[\\t ]+/m, _.DEFAULT_INDENT);\n\t}\n\n\tget currentIndent() {\n\t\tvar before = this.value.slice(0, this.selectionStart-1);\n\t\treturn _.match(before, /^[\\t ]*/mg, \"\", -1);\n\t}\n\n\t// Current language at caret position\n\tget currentLanguage() {\n\t\tvar node = this.getNode();\n\t\tnode = node? node.parentNode : this.code;\n\t\tvar lang = _.match(node.closest('[class*=\"language-\"]').className, /language-(\\w+)/, 1);\n\t\treturn _.aliases[lang] || lang;\n\t}\n\n\t// Get settings based on current language\n\tget context() {\n\t\tvar lang = this.currentLanguage;\n\t\treturn _.languages[lang] || _.languages.DEFAULT;\n\t}\n\n\tupdate (force) {\n\t\tvar code = this.value;\n\n\t\t// If code ends in newline then browser \"conveniently\" trims it\n\t\t// but we want to see the new line we just inserted!\n\t\t// So we insert a zero-width space, which isn't trimmed\n\t\tif (/\\n$/.test(this.value)) {\n\t\t\tcode += \"\\u200b\";\n\t\t}\n\n\t\tif (!force && this.code.textContent === code && $(\".token\", this.code)) {\n\t\t\t// Already highlighted\n\t\t\treturn;\n\t\t}\n\n\t\tthis.unobserve();\n\t\tthis.code.textContent = code;\n\n\t\tPrism.highlightElement(this.code);\n\n\t\tthis.observe();\n\t}\n\n\tsyncStyles() {\n\t\t// Copy pre metrics over to textarea\n\t\tvar cs = getComputedStyle(this.pre);\n\n\t\t// Copy styles from <pre> to textarea\n\t\tthis.textarea.style.caretColor = cs.color;\n\n\t\tvar properties = /^(font|lineHeight)|[tT]abSize/gi;\n\n\t\tfor (var prop in cs) {\n\t\t\tif (cs[prop] && prop in this.textarea.style && properties.test(prop)) {\n\t\t\t\tthis.wrapper.style[prop] = cs[prop];\n\t\t\t\tthis.textarea.style[prop] = this.pre.style[prop] = \"inherit\";\n\t\t\t}\n\t\t}\n\n\t\t// This is primarily for supporting the line-numbers plugin.\n\t\tthis.textarea.style['padding-left'] = cs['padding-left'];\n\n\t\tthis.update();\n\t}\n\n\tsyncScroll() {\n\t\tif (this.pre.clientWidth === 0 && this.pre.clientHeight === 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.pre.scrollTop = this.textarea.scrollTop;\n\t\tthis.pre.scrollLeft = this.textarea.scrollLeft;\n\t}\n\n\tbeforeCaretIndex (until = \"\") {\n\t\treturn this.value.lastIndexOf(until, this.selectionStart);\n\t}\n\n\tafterCaretIndex (until = \"\") {\n\t\treturn this.value.indexOf(until, this.selectionEnd);\n\t}\n\n\tbeforeCaret (until = \"\") {\n\t\tvar index = this.beforeCaretIndex(until);\n\n\t\tif (index === -1 || !until) {\n\t\t\tindex = 0;\n\t\t}\n\n\t\treturn this.value.slice(index, this.selectionStart);\n\t}\n\n\tgetLine(offset = this.selectionStart) {\n\t\tvar value = this.value;\n\t\tvar lf = \"\\n\", cr = \"\\r\";\n\t\tvar start, end, char;\n\n\t\tfor (var start = this.selectionStart; char = value[start]; start--) {\n\t\t\tif (char === lf || char === cr || !start) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tfor (var end = this.selectionStart; char = value[end]; end++) {\n\t\t\tif (char === lf || char === cr) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\treturn {start, end};\n\t}\n\n\tafterCaret(until = \"\") {\n\t\tvar index = this.afterCaretIndex(until);\n\n\t\tif (index === -1 || !until) {\n\t\t\tindex = undefined;\n\t\t}\n\n\t\treturn this.value.slice(this.selectionEnd, index);\n\t}\n\n\tsetCaret(pos) {\n\t\tthis.selectionStart = this.selectionEnd = pos;\n\t}\n\n\tmoveCaret(chars) {\n\t\tif (chars) {\n\t\t\tthis.setCaret(this.selectionEnd + chars);\n\t\t}\n\t}\n\n\tinsert(text, {index} = {}) {\n\t\tif (!text) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.textarea.focus();\n\n\t\tif (index === undefined) {\n\t\t\t// No specified index, insert in current caret position\n\t\t\tthis.replace(text);\n\t\t}\n\t\telse {\n\t\t\t// Specified index, first move caret there\n\t\t\tvar start = this.selectionStart;\n\t\t\tvar end = this.selectionEnd;\n\n\t\t\tthis.selectionStart = this.selectionEnd = index;\n\t\t\tthis.replace(text);\n\n\t\t\tthis.selectionStart = start + (index < start? text.length : 0);\n\t\t\tthis.selectionEnd = end + (index <= end? text.length : 0);\n\t\t}\n\t}\n\n\t// Replace currently selected text\n\treplace (text) {\n\t\tvar hadSelection = this.hasSelection;\n\n\t\tthis.insertText(text);\n\n\t\tif (hadSelection) {\n\t\t\t// By default inserText places the caret at the end, losing any selection\n\t\t\t// What we want instead is the replaced text to be selected\n\t\t\tthis.selectionStart = this.selectionEnd - text.length;\n\t\t}\n\t}\n\n\t// Set text between indexes and restore caret position\n\tset (text, {start, end} = {}) {\n\t\tvar ss = this.selectionStart;\n\t\tvar se = this.selectionEnd;\n\n\t\tthis.selectionStart = start;\n\t\tthis.selectionEnd = end;\n\n\t\tthis.insertText(text);\n\n\t\tthis.selectionStart = ss;\n\t\tthis.selectionEnd = se;\n\t}\n\n\tinsertText (text) {\n\t\tif (!text) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (_.supportsExecCommand === true) {\n\t\t\tdocument.execCommand(\"insertText\", false, text);\n\t\t}\n\t\telse if (_.supportsExecCommand === undefined) {\n\t\t\t// We still don't know if document.execCommand(\"insertText\") is supported\n\t\t\tlet value = this.value;\n\n\t\t\tdocument.execCommand(\"insertText\", false, text);\n\n\t\t\t_.supportsExecCommand = value !== this.value;\n\t\t}\n\n\t\tif (_.supportsExecCommand === false) {\n\t\t\tthis.textarea.setRangeText(text, this.selectionStart, this.selectionEnd, \"end\");\n\t\t\trequestAnimationFrame(() => this.update());\n\t\t}\n\n\t\treturn _.supportsExecCommand;\n\t}\n\n\t/**\n\t * Wrap text with strings\n\t * @param before {String} The text to insert before\n\t * @param after {String} The text to insert after\n\t * @param start {Number} Character offset\n\t * @param end {Number} Character offset\n\t */\n\twrap ({before, after, start = this.selectionStart, end = this.selectionEnd} = {}) {\n\t\tvar ss = this.selectionStart;\n\t\tvar se = this.selectionEnd;\n\t\tvar between = this.value.slice(start, end);\n\n\t\tthis.set(before + between + after, {start, end});\n\n\t\tif (ss > start) {\n\t\t\tss += before.length;\n\t\t}\n\n\t\tif (se > start) {\n\t\t\tse += before.length;\n\t\t}\n\n\t\tif (ss > end) {\n\t\t\tss += after.length;\n\t\t}\n\n\t\tif (se > end) {\n\t\t\tse += after.length;\n\t\t}\n\n\t\tthis.selectionStart = ss;\n\t\tthis.selectionEnd = se;\n\t}\n\n\twrapSelection (o = {}) {\n\t\tvar hadSelection = this.hasSelection;\n\n\t\tthis.replace(o.before + this.selection + o.after);\n\n\t\tif (hadSelection) {\n\t\t\tif (o.outside) {\n\t\t\t\t// Do not include new text in selection\n\t\t\t\tthis.selectionStart += o.before.length;\n\t\t\t\tthis.selectionEnd -= o.after.length;\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tthis.moveCaret(-o.after.length);\n\t\t}\n\t}\n\n\ttoggleComment() {\n\t\tvar comments = this.context.comments;\n\n\t\t// Are we inside a comment?\n\t\tvar node = this.getNode();\n\t\tvar commentNode = node.parentNode.closest(\".token.comment\");\n\n\t\tif (commentNode) {\n\t\t\t// Remove comment\n\t\t\tvar start = this.getOffset(commentNode);\n\t\t\tvar commentText = commentNode.textContent;\n\n\t\t\tif (comments.singleline && commentText.indexOf(comments.singleline) === 0) {\n\t\t\t\tvar end = start + commentText.length;\n\t\t\t\tthis.set(this.value.slice(start + comments.singleline.length, end), {start, end});\n\t\t\t\tthis.moveCaret(-comments.singleline.length);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tcomments = comments.multiline || comments;\n\t\t\t\tvar end = start + commentText.length - comments[1].length;\n\t\t\t\tthis.set(this.value.slice(start + comments[0].length, end), {start, end: end + comments[1].length});\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\t// Not inside comment, add\n\t\t\tif (this.hasSelection) {\n\t\t\t\tcomments = comments.multiline || comments;\n\n\t\t\t\tthis.wrapSelection({\n\t\t\t\t\tbefore: comments[0],\n\t\t\t\t\tafter: comments[1]\n\t\t\t\t});\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// No selection, wrap line\n\t\t\t\t// FIXME *inside indent*\n\t\t\t\tcomments = comments.singleline? [comments.singleline, \"\"] : comments.multiline || comments;\n\t\t\t\tend = this.afterCaretIndex(\"\\n\");\n\t\t\t\tthis.wrap({\n\t\t\t\t\tbefore: comments[0],\n\t\t\t\t\tafter: comments[1],\n\t\t\t\t\tstart: this.beforeCaretIndex(\"\\n\") + 1,\n\t\t\t\t\tend: end < 0? this.value.length : end\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t}\n\n\tduplicateContent () {\n\t\tvar before = this.beforeCaret(\"\\n\");\n\t\tvar after = this.afterCaret(\"\\n\");\n\t\tvar text = before + this.selection + after;\n\n\t\tthis.insert(text, {index: this.selectionStart - before.length});\n\t}\n\n\tdelete (characters, {forward, pos} = {}) {\n\t\tvar i = characters = characters > 0? characters : (characters + \"\").length;\n\n\t\tif (pos) {\n\t\t\tvar selectionStart = this.selectionStart;\n\t\t\tthis.selectionStart = pos;\n\t\t\tthis.selectionEnd = pos + this.selectionEnd - selectionStart;\n\t\t}\n\n\t\twhile (i--) {\n\t\t\tdocument.execCommand(forward? \"forwardDelete\" : \"delete\");\n\t\t}\n\n\t\tif (pos) {\n\t\t\t// Restore caret\n\t\t\tthis.selectionStart = selectionStart - characters;\n\t\t\tthis.selectionEnd = this.selectionEnd - pos + this.selectionStart;\n\t\t}\n\t}\n\n\t/**\n\t * Get the text node at a given chracter offset\n\t */\n\tgetNode(offset = this.selectionStart, container = this.code) {\n\t\tvar node, sum = 0;\n\t\tvar walk = document.createTreeWalker(container, NodeFilter.SHOW_TEXT);\n\n\t\twhile (node = walk.nextNode()) {\n\t\t\tsum += node.data.length;\n\n\t\t\tif (sum >= offset) {\n\t\t\t\treturn node;\n\t\t\t}\n\t\t}\n\n\t\t// if here, offset is larger than maximum\n\t\treturn null;\n\t}\n\n\t/**\n\t * Get the character offset of a given node in the highlighted source\n\t */\n\tgetOffset(node) {\n\t\tvar range = document.createRange();\n\t\trange.selectNodeContents(this.code);\n\t\trange.setEnd(node, 0);\n\t\treturn range.toString().length;\n\t}\n\n\t// Utility method to get regex matches\n\tstatic match(str, regex, def, index = 0) {\n\t\tif (typeof def === \"number\" && arguments.length === 3) {\n\t\t\tindex = def;\n\t\t\tdef = undefined;\n\t\t}\n\n\t\tvar match = str.match(regex);\n\n\t\tif (index < 0) {\n\t\t\tindex = match.length + index;\n\t\t}\n\n\t\treturn match? match[index] : def;\n\t}\n\n\tstatic checkShortcut(shortcut, evt) {\n\t\treturn shortcut.trim().split(/\\s*\\+\\s*/).every(key => {\n\t\t\tswitch (key) {\n\t\t\t\tcase \"Cmd\":   return evt[superKey];\n\t\t\t\tcase \"Ctrl\":  return evt.ctrlKey;\n\t\t\t\tcase \"Shift\": return evt.shiftKey;\n\t\t\t\tcase \"Alt\":   return evt.altKey;\n\t\t\t\tdefault: return evt.key === key;\n\t\t\t}\n\t\t});\n\t}\n\n\tstatic registerLanguage(name, context, parent = _.languages.DEFAULT) {\n\t\tObject.setPrototypeOf(context, parent);\n\t\treturn _.languages[name] = context;\n\t}\n\n\tstatic matchIndentation(text, currentIndent) {\n\t\t// FIXME this assumes that text has no indentation of its own\n\t\t// to make this more generally useful beyond snippets, we should first\n\t\t// strip text's own indentation.\n\t\ttext = text.replace(/\\r?\\n/g, \"$&\" + currentIndent);\n\t}\n\n\tstatic adjustIndentation(text, {indentation, relative = true, indent = _.DEFAULT_INDENT}) {\n\t\tif (!relative) {\n\t\t\t// First strip min indentation\n\t\t\tvar minIndent = text.match(_.regexp.gm`^(${indent})+`).sort()[0];\n\n\t\t\tif (minIndent) {\n\t\t\t\ttext.replace(_.regexp.gm`^${minIndent}`, \"\");\n\t\t\t}\n\t\t}\n\n\t\tif (indentation < 0) {\n\t\t\treturn text.replace(_.regexp.gm`^${indent}`, \"\");\n\t\t}\n\t\telse if (indentation > 0) { // Indent\n\t\t\treturn text.replace(/^/gm, indent);\n\t\t}\n\t}\n};\n\n// Static properties\nObject.assign(_, {\n\tall: new WeakMap(),\n\tready,\n\tDEFAULT_INDENT: \"\\t\",\n\tCARET_INDICATOR: /(^|[^\\\\])\\$(\\d+)/g,\n\tsnippets: {\n\t\t\"test\": \"Snippets work!\",\n\t},\n\tpairs: {\n\t\t\"(\": \")\",\n\t\t\"[\": \"]\",\n\t\t\"{\": \"}\",\n\t\t'\"': '\"',\n\t\t\"'\": \"'\",\n\t\t\"`\": \"`\"\n\t},\n\tshortcuts: {\n\t\t\"Cmd + /\": function() {\n\t\t\tthis.toggleComment();\n\t\t},\n\t\t\"Ctrl + Shift + D\": function() {\n\t\t\tthis.duplicateContent();\n\t\t}\n\t},\n\tlanguages: {\n\t\tDEFAULT: {\n\t\t\tcomments: {\n\t\t\t\tmultiline: [\"/*\", \"*/\"]\n\t\t\t},\n\t\t\tsnippets: {}\n\t\t}\n\t},\n\t// Map of Prism language ids and their canonical name\n\taliases: (() => {\n\t\tvar ret = {};\n\t\tvar canonical = new WeakMap(Object.entries(Prism.languages).map(x => x.reverse()).reverse());\n\n\t\tfor (var id in Prism.languages) {\n\t\t\tvar grammar = Prism.languages[id];\n\n\t\t\tif (typeof grammar !== \"function\") {\n\t\t\t\tret[id] = canonical.get(grammar);\n\t\t\t}\n\t\t}\n\n\t\treturn ret;\n\t})(),\n\n\tregexp: (() => {\n\t\tvar escape = s => s.replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, \"\\\\$&\");\n\t\tvar _regexp = (flags, strings, ...values) => {\n\t\t\tvar pattern = strings[0] + values.map((v, i) => escape(v) + strings[i+1]).join(\"\");\n\t\t\treturn RegExp(pattern, flags);\n\t\t};\n\t\tvar cache = {};\n\n\t\treturn new Proxy(_regexp.bind(_, \"\"), {\n\t\t\tget: (t, property) => {\n\t\t\t\treturn t[property] || cache[property]\n\t\t\t\t\t   || (cache[property] = _regexp.bind(_, property));\n\t\t\t}\n\t\t});\n\t})()\n});\n\n_.supportsExecCommand = document.execCommand? undefined : false;\n\n$.ready().then(() => {\n\t$$(\":not(.prism-live) > textarea.prism-live, :not(.prism-live) > pre.prism-live\").forEach(source => {\n\t\tif (!_.all.get(source)) {\n\t\t\tnew _(source);\n\t\t}\n\t});\n});\n\n})();\n"]}