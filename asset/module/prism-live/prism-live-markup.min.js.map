{"version":3,"sources":["module/prism-live/node_modules/browser-pack/_prelude.js","module/prism-live/src/js/module/prism-live/prism-live-markup.js"],"names":["r","e","n","t","o","i","f","c","require","u","a","Error","code","p","exports","call","length","module","_","Prism","Live","registerLanguage","comments","multiline","selfClosing","snippets","submit","custom","selector","isName","test","isSnippet","match","inTag","this","getNode","parentNode","closest","concat","times","content","slice","tag","html","id","classes","map","x","join","languages","markup","indexOf","ret"],"mappings":"CAAA,SAAAA,EAAAC,EAAAC,EAAAC,GAAA,SAAAC,EAAAC,EAAAC,GAAA,IAAAJ,EAAAG,GAAA,KAAAJ,EAAAI,GAAA,KAAAE,EAAA,mBAAAC,iBAAA,IAAAF,GAAAC,EAAA,OAAAA,EAAAF,GAAA,MAAAI,EAAA,OAAAA,EAAAJ,GAAA,OAAAK,EAAA,IAAAC,MAAA,uBAAAN,EAAA,WAAAK,EAAAE,KAAA,mBAAAF,CAAA,KAAAG,EAAAX,EAAAG,GAAA,CAAAS,QAAA,IAAAb,EAAAI,GAAA,GAAAU,KAAAF,EAAAC,SAAA,SAAAd,GAAA,OAAAI,EAAAH,EAAAI,GAAA,GAAAL,MAAA,GAAAa,IAAAC,QAAAd,EAAAC,EAAAC,EAAAC,EAAA,QAAAD,EAAAG,GAAAS,OAAA,SAAAL,EAAA,mBAAAD,iBAAAH,EAAA,EAAAA,EAAAF,EAAAa,OAAAX,IAAAD,EAAAD,EAAAE,IAAA,OAAAD,CAAA,eAAAI,EAAAS,EAAAH,G,aCEA,IAAII,EAAIC,MAAMC,KAEdF,EAAEG,iBAAiB,SAAU,CAC5BC,SAAU,CACTC,UAAW,CAAC,UAAQ,WAErBC,YAAa,CAAC,QAAS,MAAO,OAAQ,OAAQ,OAAQ,KAAM,MAC5DC,SAAU,CACTC,OAAU,wCACVC,OAAQ,SAAUC,GACjB,IAAIC,EAAS,YAAYC,KAAKF,GAC1BG,EAAYF,GAAUD,EAASI,MAAM,iCAErCC,EADOC,KAAKC,UACCC,WAAWC,QAAQ,cAEpC,GAAIR,GAAUI,EAEb,SAAAK,OAAUV,EAAQ,SAEd,GAAIG,EAAW,CACnB,IAAIQ,EAAQ,EACRC,EAAU,GAEVT,EAAU,KAEbS,EAAUT,EAAU,GAAGU,MAAM,GAAI,IAG9BV,EAAU,KACbQ,EAAQR,EAAU,GAAGU,MAAM,IAG5B,IAAIC,EAAMxB,EAAEc,MAAMJ,EAAU,WAAY,OACpCe,EAAI,IAAAL,OAAOI,GACXE,EAAK1B,EAAEc,MAAMJ,EAAU,YAAa,GAEpCgB,IACHD,GAAI,QAAAL,OAAYM,EAAE,MAGnB,IAAIC,EAAUjB,EAASI,MAAM,aAEzBa,IACHA,EAAUA,EAAQC,KAAI,SAAAC,GAAC,OAAIA,EAAEN,MAAM,EAAE,IACrCE,GAAI,WAAAL,OAAeO,EAAQG,KAAK,KAAI,MAUrC,IAPA,IAAIxB,EAAcN,EAAE+B,UAAUC,OAAO1B,YAAY2B,QAAQT,IAAQ,EAK7DU,GAHJT,GAAQnB,EAAa,UAAY,MAGvB,IAEDnB,EAAE,EAAGA,EAAEkC,EAAOlC,IAGrB+C,GADG5B,EACImB,EAGJ,GAAAL,OAAOK,GAAIL,OAAGE,EAAO,MAAAF,OAAKI,EAAG,KAG7BH,EAAQ,GAAKlC,EAAI,EAAIkC,IACxBa,GAAO,MAIT,OAAOA,CACR,CACD,I","file":"prism-live-markup.min.js","sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()","{\n\nlet _ = Prism.Live;\n\n_.registerLanguage(\"markup\", {\n\tcomments: {\n\t\tmultiline: [\"<!--\", \"-->\"]\n\t},\n\tselfClosing: [\"input\", \"img\", \"link\", \"meta\", \"base\", \"br\", \"hr\"],\n\tsnippets: {\n\t\t\"submit\": '<button type=\"submit\">Submit</button>',\n\t\tcustom: function (selector) {\n\t\t\tvar isName = /^[\\w:-]+$/.test(selector);\n\t\t\tvar isSnippet = isName || selector.match(/^[.#\\w:-]+(\\{.+?\\})?(\\*\\d+)?$/);\n\t\t\tvar node = this.getNode();\n\t\t\tvar inTag = node.parentNode.closest(\".token.tag\");\n\n\t\t\tif (isName && inTag) {\n\t\t\t\t// Attribute\n\t\t\t\treturn `${selector}=\"$1\"`;\n\t\t\t}\n\t\t\telse if (isSnippet) {\n\t\t\t\tvar times = 1;\n\t\t\t\tvar content = \"\";\n\n\t\t\t\tif (isSnippet[1]) {\n\t\t\t\t\t// Content\n\t\t\t\t\tcontent = isSnippet[1].slice(1, -1);\n\t\t\t\t}\n\n\t\t\t\tif (isSnippet[2]) { // Times\n\t\t\t\t\ttimes = isSnippet[2].slice(1);\n\t\t\t\t}\n\n\t\t\t\tvar tag = _.match(selector, /^[\\w:-]+/, \"div\");\n\t\t\t\tvar html = `<${tag}`;\n\t\t\t\tvar id = _.match(selector, /#([\\w-]+)/, 1);\n\n\t\t\t\tif (id) {\n\t\t\t\t\thtml += ` id=\"${id}\"`;\n\t\t\t\t}\n\n\t\t\t\tvar classes = selector.match(/\\.[\\w-]+/g);\n\n\t\t\t\tif (classes) {\n\t\t\t\t\tclasses = classes.map(x => x.slice(1));\n\t\t\t\t\thtml += ` class=\"${classes.join(\" \")}\"`;\n\t\t\t\t}\n\n\t\t\t\tvar selfClosing = _.languages.markup.selfClosing.indexOf(tag) > -1;\n\n\t\t\t\thtml += selfClosing? \"$1 />$2\" : \">$1\";\n\n\t\t\t\tvar tagLength = html.length;\n\t\t\t\tvar ret = \"\";\n\n\t\t\t\tfor (var i=0; i<times; i++) {\n\t\t\t\t\t// Tag\n\t\t\t\t\tif (selfClosing) {\n\t\t\t\t\t\tret += html;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tret += `${html}${content}</${tag}>`;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (times > 1 && i + 1 < times) {\n\t\t\t\t\t\tret += \"\\n\";\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn ret;\n\t\t\t}\n\t\t}\n\t}\n});\n\n}\n"]}